<head>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/bootstrap/css/bootstrap.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/bootstrap/css/bootstrap.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.css"/>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.theme.css" />
<script src="${(contextPath)!''}/webjars/jquery/3.5.1/jquery.min.js"></script>
<script src="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.js"></script>          
<script src="${(contextPath)!''}/webjars/1.0/gridutils/gridutils.js"></script> 
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/css/starter.style.css" />
<script type="text/javascript" src="${contextPath!''}/webjars/1.0/JSCal2/js/jscal2.js"></script>
<script type="text/javascript" src="${contextPath!''}/webjars/1.0/JSCal2/js/lang/en.js"></script> 
<script src="${(contextPath)!''}/webjars/1.0/common/jQuiverCommon.js"></script>
</head>

<div class="container">
    <div class="topband">
        <h2 class="title-cls-name float-left">${messageSource.getMessage('jws.notificationlisting')}</h2> 
        <div class="float-right">
             <button type="submit" class="btn btn-primary" onclick="upsert(null)"> ${messageSource.getMessage('jws.createnew')} </button>
            <span onclick="backToWelcomePage();">
                <input id="backBtn" class="btn btn-secondary" name="backBtn" value="${messageSource.getMessage('jws.back')}" type="button">
            </span> 
        </div>
        
        <div class="clearfix"></div>        
    </div>
        
   
    <div id="deleteHeader"></div>
     <div id="not1Grid"></div>
    <div id="snackbar"></div>
</div>

<script>
    contextPath = "${(contextPath)!''}";
    let primaryKeyDetails = {"notificationid":""};
     let listingData  = [];
     var displayOnceOption = [{"": "All"}, {"0": "Inactive"}, {"1": "Active"}];
     var messageTypeOption = [{"": "All"}, {"0": "Informative"}, {"1": "Warning"}, {"1": "Error"}];
    $(function () {
    //Add all columns that needs to be displayed in the grid
        let colM = [
            	{ title: "${messageSource.getMessage('jws.notificationid')}", hidden : true, width: 130, dataIndx: "notificationId", align: "left", halign: "center",
                filter: { type: "textbox", condition: "contain", listeners: ["change"]}  },
            	{ title: "${messageSource.getMessage('jws.msgvalidfrom')}", hidden : false, width: 130, dataIndx: "validFrom", align: "left", halign: "center",
                filter: { type: "textbox", condition: "contain", listeners: ["change"]}  },
            	{ title: "${messageSource.getMessage('jws.msgvalidtill')}", hidden : false, width: 130, dataIndx: "validTill", align: "left", halign: "center",
                filter: { type: "textbox", condition: "contain", listeners: ["change"]}  },
            	{ title: "${messageSource.getMessage('jws.msgtext')}", hidden : false, width: 130, dataIndx: "messageText", align: "left", halign: "center",
                filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
            	{ title: "${messageSource.getMessage('jws.msgtype')}", hidden : false, width: 130, dataIndx: "messageType", align: "left", halign: "center", render:messageTypeRenderer ,
                filter: { type: "select", condition: "equal",options : messageTypeOption, listeners: ["change"]} },
            { title: "${messageSource.getMessage('jws.displayonce')}", maxWidth: 100, dataIndx: "displayOnce", align: "left",  halign: "left", render:displayOnceRenderer,
            filter: { type: "select", condition: "equal",options : displayOnceOption, listeners: ["change"]} },
                        	
            	{ title: "<@resourceBundle 'jws.action' />", width: 50, maxWidth: 145, dataIndx: "action", align: "center", halign: "center", render: manageRecord, sortable: false}
               
        ];
    
    	let dataModel = {
        	url: contextPath+"/cf/pq-grid-data",
           
    	};
    //System will fecth grid data based on gridId
        let grid = $("#not1Grid").grid({
          gridId: "notificationDetailsListing",
          colModel: colM,
          dataModel: dataModel
        });
    
    });
    
    //Customize grid action column. You can add buttons to perform various operations on records like add, edit, delete etc.
    function manageRecord(uiObject) {
        listingData  [uiObject.rowIndx] = uiObject.rowData;
        let rowIndx = uiObject.rowIndx;
	let actionElement= '<span id="'+rowIndx+'" onclick="upsert('+ uiObject.rowIndx +')" class= "grid_action_icons" title="<@resourceBundle'jws.edit'/>"><i class="fa fa-pencil"></i></span>'.toString();
	actionElement += '<span onclick=\'openDeletConfirmation("not1Grid","'+uiObject.rowData.notificationId+'","6ac6a54c-8d3f-11eb-8dcd-0242ac130003","","")\' class= "grid_action_icons" title="Delete"><i class="fa fa-trash "></i></span>'.toString();
return actionElement;
    }
    
    function messageTypeRenderer(uiObject) {
        if(uiObject.rowData.messageType == 0){
            return "Informative";
        } else if (uiObject.rowData.messageType == 1) {
             return "Warning";
        } else if(uiObject.rowData.messageType == 2) {
             return "Error";  
       }
        return "";
    }

    function displayOnceRenderer(uiObject){
        let statusElement =  "Inactive";
        if(uiObject.rowData.displayOnce == 1){
            statusElement = "Active";
        }
        return statusElement;
    }
    function upsert(a_rowID){
    	let redirectURL = contextPath+"/view/jq-generic-user-notification-f1";
        if(a_rowID != null && a_rowID >= 0){
    			redirectURL += '?notificationid=' + listingData[a_rowID]["notificationId"];
    	}
    	location.href = redirectURL;
    }

    //Code go back to previous page
    function backToWelcomePage() {
        location.href = contextPath+"/cf/home";
        
    }
</script>