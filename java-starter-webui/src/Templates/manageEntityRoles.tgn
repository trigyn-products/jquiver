<head>
    <link rel="stylesheet" href="${(contextPath)!''}/webjars/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link rel="stylesheet" href="${(contextPath)!''}/webjars/bootstrap/css/bootstrap.css" />
    <link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.css"/>
    <link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.theme.css" />
    <script src="${(contextPath)!''}/webjars/jquery/3.5.1/jquery.min.js"></script>
    <script src="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.min.js"></script>
    <script src="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.js"></script>          
    <script src="${(contextPath)!''}/webjars/1.0/gridutils/gridutils.js"></script> 
    <link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.css" />
    <link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/css/starter.style.css" />
</head>

<div class="box-block">
     
        
    <div id="divManageEntityRoleGrid"></div>

    <div id="snackbar"></div>
</div>
<script>
var grid;
var contextPath= "${contextPath}";
var moduleType = [{"": "All"}];

 $.ajax({
			type : "GET",
			url : contextPath+"/cf/modules",
			async: false,
			success : function(data) {
				for(let counter = 0; counter < data.length; ++counter) {
					let object = data[counter];
					let details = new Object()
					details[object["moduleId"]] = object["moduleName"];
					moduleType.push(details);
				}
			}
		});



$(function () {
    debugger;
	let colM = [
		 { title: "${messageSource.getMessage('jws.moduleName')}", maxWidth: "30%", align: "center",  dataIndx: "moduleId", align: "left", halign: "center",render: moduleTypes,
        filter: { type: "select", condition: "equal",options : moduleType, listeners: ["change"]} },
        { title: "${messageSource.getMessage('jws.entityname')}", maxWidth: "30%", align: "center", dataIndx: "entityName", align: "left", halign: "center",
        filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
        <#list roles as role>
              { title: "${role?api.getRoleName()}", minwidth: 200, render:addCheckBox, align: "center",  dataIndx: "${role?api.getRoleName()}", halign: "center", attr:"${role?api.getRoleId()}", 
         filter: {type: "<input type='button' class='cm-select-btn' name='${role?api.getRoleName()}' attr='${role?api.getRoleId()}'  value='Select All' onclick='checkAllBoxes(this);' > <input type='button' class='cm-select-btn' name='${role?api.getRoleName()}' attr='${role?api.getRoleId()}'  value='Deselect All' onclick='checkAllBoxes(this);' >"}}
        	${(role?is_last)?then("", "," )}
        </#list>
 
	];
	let dataModel = {
	   	url: contextPath+"/cf/pq-grid-data",
    };
     grid = $("#divManageEntityRoleGrid").grid({
      gridId: "manageEntityRoleGrid",
      colModel: colM,
      dataModel: dataModel
  });
  handleEntityRole();
});
function moduleTypes(uiObject){
  let cellValue = uiObject.rowData.moduleId;
  return moduleType.find(el => el[cellValue])[cellValue];
}
function checkAllBoxes(uiObject){
    

    let attrChecked = uiObject.value == "Select All"?1:0 ;
    let entityDataList = [];
    let roleId = uiObject.getAttribute("attr");
    let currentPageRecords = grid.pqGrid( "option","dataModel.data");

  $.each(currentPageRecords,function(key,value){
    let entityData = new Object();
    $("#"+value["entityRoleId"]+"_"+roleId).prop("checked",attrChecked);
    entityData.roleId= roleId;
    entityData.entityName = value["entityName"];
    entityData.moduleId = value["moduleId"];
    entityData.entityId = value["entityId"];
    entityData.isActive = attrChecked;
    entityDataList.push(entityData);
});
   saveEntity(entityDataList);
}

function addCheckBox(uiObject) {

	let rowIndxPage = uiObject.rowIndxPage;
    let columnName = uiObject.dataIndx;
  
  let attrChecked = uiObject.rowData[columnName]== null?false:uiObject.rowData[columnName].split("@::@")[1]=="0"?false:true;
  if(attrChecked){
    return "<div style='width:100%;'><center><input type='checkbox' id='"+uiObject.rowData["entityRoleId"]+"_"+uiObject.column.attr+"' checked onchange='saveEntityRole(this)' col='"+columnName+"' rowIndxPage='"+rowIndxPage+"' ></center></div>";
  }
  else{
    return "<div style='width:100%;'><center><input type='checkbox' id='"+uiObject.rowData["entityRoleId"]+"_"+uiObject.column.attr+"' onchange='saveEntityRole(this)' col='"+columnName+"' rowIndxPage='"+rowIndxPage+"' ></center></div>";
  }
	
}	

function saveEntityRole(thisObj){
  let entityDataList = [];
  let attrChecked = thisObj.checked == true?1:0 ;
  let columnName = thisObj.getAttribute("col");
  let rowData = grid.pqGrid( "getRowData", {rowIndx: thisObj.getAttribute("rowIndxPage")} );
  let colData = grid.pqGrid( "getColumn",{ dataIndx: columnName } );
  let entityRoleId  =  rowData[columnName] == null?null:rowData["entityRoleId"];
  let entityData = new Object();
  entityData.roleId= colData["attr"];
  entityData.entityName = rowData["entityName"];
  entityData.moduleId = rowData["moduleId"];
  entityData.entityId = rowData["entityId"];
  entityData.isActive = attrChecked;
  entityDataList.push(entityData);
  saveEntity(entityDataList);
}

function saveEntity(entityDataList){

    $.ajax({
		     		type : "POST",
            contentType : "application/json",
		     		url : contextPath+"/cf/suer",
		     		data : JSON.stringify(entityDataList),
		            success: function(data) {
		              
		            }
		     	});
}
</script>