<head>
<script src="${(contextPath)!''}/webjars/1.0/rich-autocomplete/jquery.richAutocomplete.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/typeahead/typeahead.js"></script>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/rich-autocomplete/richAutocomplete.min.css" />

</head>
        <div class="row"> 
            <div class="col-2">
                <div class="fav-image" data-hover="&#9733" onclick="addRemoveFav()">&#9734;</div>         
            </div>
            <div class="col-10 float-right">
                <div class="col-inner-form full-form-fields">
                    <div class="search-cover">
                    	<input class="form-control" id="rbAutocompletePF" type="text">
                    	<i class="fa fa-search" aria-hidden="true"></i>
                    </div>
                </div>
            </div>          
        </div>
<script>
contextPath = "${(contextPath)!''}";	
let autocompletePF;

	$(function () {
        let imageName;
        autocompletePF = $("#rbAutocompletePF").autocomplete({
            autocompleteId: "user-favorite-entity-autocomplete",
            prefetch : true,
            enableClearText: true,
            render: function(item) {
                var renderStr = "";
                imageName = getImageNameByType(item.entityType);
                /*Written for preventing Cross Site Scripting*/
                var entityName = item.entityName;
                var encodedName = $('<div />').text(entityName).html();
                /**Ends Here*/
                if(item.emptyMsg == undefined || item.emptyMsg === ""){
                   renderStr = '<div class="user-favorite-img-cls"><img src="${(contextPath)!''}/webjars/1.0/images/'+imageName+'.svg"><p>'+encodedName+'</p></div>';
                }else{
                    renderStr = item.emptyMsg;	
                }	    				        
                return renderStr;
            },
            additionalParamaters: {languageId: 1},
            extractText: function(item) {
                return item.entityName;
            },
            select: function(item) {
                submitForm(item);
               $("#rbAutocompletePF").blur();
            /**Added for clearing the Autocomplete Value after selecting*/
                $('#rbAutocompletePF').val('');
            }, 
        });
    });
    
    function addRemoveFav(){
	    $(".fav-image").toggleClass("fav-imageFill");
        let isChecked = $(".fav-image").hasClass("fav-imageFill");
        let entityIdVar = "${innerTemplateObj.entityId}";
        let entityNameVar = "${innerTemplateObj.entityName}";
        $.ajax({
			url:contextPath+"/api/user-favorite-entity",
			type:"POST",
	        data:{
                entityType: "${innerTemplateObj.entityType}",
                entityId: $("#"+entityIdVar).val().trim(),
                entityName: $("#"+entityNameVar).val().trim(),
                isChecked: isChecked,
	        }, 
			success : function(data) {
				autocompletePF.resetAutocomplete();
				showMessage("Successfully updated favorite", "success");
			},
			error : function(xhr, error){
				showMessage("Error occurred while updating favorite", "error");
			}, 
	    }); 
	}

    function getSavedEntity(){
        let entityIdVar = "${innerTemplateObj.entityId}";
        let entityNameVar = "${innerTemplateObj.entityName}";
        $.ajax({
			url:contextPath+"/api/user-favorite-entity-by-type",
			type:"POST",
	        data:{
                entityType: "${innerTemplateObj.entityType}",
                entityId: $("#"+entityIdVar).val().trim(),
                entityName: $("#"+entityNameVar).val().trim(),
	        }, 
			success : function(isFavorite) {
                if(isFavorite.trim() == 1){
                    $(".fav-image").addClass("fav-imageFill");
                   }
			},
			error : function(xhr, error){
			  showMessage("Error occurred while updating favorite", "error");
			}, 
	    }); 
    }
    
</script>