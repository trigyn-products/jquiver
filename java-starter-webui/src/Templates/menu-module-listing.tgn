<head>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/bootstrap/css/bootstrap.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.css"/>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.theme.css" />
<script src="${(contextPath)!''}/webjars/jquery/3.5.1/jquery.min.js"></script>
<script src="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/gridutils/gridutils.js"></script>      
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/css/starter.style.css" />
<script src="${(contextPath)!''}/webjars/1.0/common/jQuiverCommon.js"></script>
</head>

<div class="container">
		<div class="topband">
		
		<h2 class="title-cls-name float-left">${messageSource.getMessage('jws.siteLayout')}</h2> 
		<div class="float-right">
        	${messageSource.getMessage('jws.show')}<select id="typeSelect" class="typeSelectDropDown" onchange="changeType()">   
                <option value="0">${messageSource.getMessage('jws.all')}</option>                   
                <option value="1" selected>${messageSource.getMessage('jws.custom')}</option>                   
                <option value="2">${messageSource.getMessage('jws.system')}</option>                 
            </select>
		<span>
  		    <input id="configHomePage" class="btn btn-primary" name="configHomePage" value="${messageSource.getMessage('jws.definehomepage')}" type="button" onclick="configHomePage(this)">
		</span>
		<span>
  		    <input id="addModule" class="btn btn-primary" name="addGridDetails" value="${messageSource.getMessage('jws.addModule')}" type="button" onclick="submitForm();">
		</span>

         <span onclick="backToWelcomePage();">
          	<input id="backBtn" class="btn btn-secondary" name="backBtn" value="${messageSource.getMessage('jws.back')}" type="button">
         </span>	
		</div>
		
		<div class="clearfix"></div>		
		</div>
		
		<div id="deleteHeader"></div>
		<div id="divModuleListing"></div>

</div>


<form action="${(contextPath)!''}/cf/aem" method="POST" id="formMuRedirect">
	<input type="hidden" id="moduleId" name="module-id">
</form>
<form action="${(contextPath)!''}/cf/chpl" method="GET" id="configHomePageListing">
	
</form>
<script>
	contextPath = "${(contextPath)!''}";
	function backToWelcomePage() {
        location.href = contextPath+"/cf/home";
	}
	$(function () {
		let formElement = $("#formMuRedirect")[0].outerHTML;
		let formDataJson = JSON.stringify(formElement);
		sessionStorage.setItem("module-manage-details", formDataJson);
		let colM = [
	        { title: "", width: 130, align: "center", dataIndx: "moduleId", align: "left", halign: "center", hidden : true },
	        { title: "${messageSource.getMessage('jws.moduleName')}", width: 100, align: "center",  dataIndx: "moduleName", align: "left", halign: "center",render: formatModuleName,
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.moduleUrl')}", width: 160, align: "center", dataIndx: "moduleURL", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.parentModuleName')}", width: 200, align: "center", dataIndx: "parentModuleName", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.sequencenumber')}", width: 100, dataIndx: "sequence", align: "right", halign: "right",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.insidemenu')}", width: 100, align: "center", dataIndx: "isInsideMenu", align: "center", halign: "center", render: formatIsInsideMenu},
	        { title: "${messageSource.getMessage('jws.homepage')}", maxwidth: 150, align: "center", dataIndx: "isHomePage", align: "center", halign: "center", render: formatIsHomePage},
          { title: "${messageSource.getMessage('jws.action')}", width: 90, maxWidth: 145, dataIndx: "action", align: "left", halign: "left", render: editModule, sortable: false}
		];
		let dataModel = {
        	url: contextPath+"/cf/pq-grid-data",
        	sortIndx: "lastUpdatedTs",
        	sortDir: "down",
    	};
		let grid = $("#divModuleListing").grid({
	      gridId: "moduleListingGrid",
	      colModel: colM,
          dataModel: dataModel,
          additionalParameters: {"cr_moduleTypeId":"str_1"}
	  });
	});
  
    function changeType() {
        var type = $("#typeSelect").val();   
        let postData;
        if(type == 0) {
            postData = {gridId:"moduleListingGrid"}
        } else {
            let typeCondition = "str_"+type;       
   
            postData = {gridId:"moduleListingGrid"
                    ,"cr_moduleTypeId":typeCondition
                    }
        }
        
        let gridNew = $( "#divModuleListing" ).pqGrid();
        gridNew.pqGrid( "option", "dataModel.postData", postData);
        gridNew.pqGrid( "refreshDataAndView" );  
    }
       
  	function editModule(uiObject) {
		const moduleId 			= uiObject.rowData.moduleId;
		const moduleURL 		= uiObject.rowData.moduleURL;
		const targetLookupId 	= uiObject.rowData.targetLookupId;
		var requestParamJson 	= uiObject.rowData.requestParamJson;
		const templateName = uiObject.rowData.moduleName;
		const updatedDate = uiObject.rowData.lastUpdatedTs;
		const targetTypeId 		= uiObject.rowData.targetTypeId;
		actionElement = '<span id="'+moduleId+'" onclick="submitForm(this)" class= "grid_action_icons"><i class="fa fa-pencil" title="Edit module"></i></span>'.toString();
        if(uiObject.rowData.moduleTypeId == 1) {   
			<#if loggedInUserRoleList?? && loggedInUserRoleList?size gt 0>
		    	<#list loggedInUserRoleList as loggedInUserRole>
		            	<#if (loggedInUserRole == "ADMIN")> 
		        			actionElement += '<span onclick=\'openDeletConfirmation("divModuleListing","'+moduleId+'","c6cc466a-0ed3-11eb-94b2-f48e38ab9348","'+templateName+'","'+updatedDate+'")\' class= "grid_action_icons" title="Delete"><i class="fa fa-trash "></i></span>'.toString();
		        			<#break>
		        		</#if>
		         </#list>
		     </#if>
		 }
		 if(targetLookupId==6){
            actionElement += '<span onclick="return false;" class= "grid_action_icons"><i class="fa fa-eye-slash" title="View module"></i></span>'.toString();
         }else if (targetLookupId != 7)
        	actionElement += '<span onclick=\'openModuleListing("'+moduleURL+'")\' class= "grid_action_icons"><i class="fa fa-eye" title="View module"></i></span>'.toString();
        else{
    		actionElement += '<span onclick=\'openModuleTargetListing("'+moduleURL+'","'+targetTypeId+'","'+moduleId+'")\' class= "grid_action_icons"><i class="fa fa-eye" title="View module"><input type="hidden" id="' + moduleId + '" name="' + moduleId + '" value="' + requestParamJson + '" /></i></span>'.toString();	
        }
        return actionElement.toString();
	}
  	function escapeHtml(text) {
  		//alert(text);
  	    var div = document.createElement('div');
  	    div.innerText = text;
  	    return div.innerHTML;
  	}
    /*Written for preventing Cross Site Scripting*/
    function formatModuleName(uiObject){   
        const modulename = uiObject.rowData.moduleName;
        var encodedName = $('<div />').text(modulename).html();
        return encodedName;             
    }
    /**Ends Here*/

    function openModuleListing(moduleURL) {
		window.open(contextPath+"/view/"+moduleURL);
    }
    function openModuleTargetListing(moduleURL, actionType, requestParamsModuleId) {
    	let requestParams = $("#"+requestParamsModuleId).val();
		let form = $('<form id="targetUrlForm" action="' + moduleURL + '" method="' + actionType + '">');
		if(requestParams != ''){
			var jsonRequestParams = $.parseJSON(requestParams);
			$.each(jsonRequestParams, function(key, val) {	 
				form.append('<input name="' + key + '" value="' + val + '" type="hidden" />');
			});	
		}
		$(form).attr('target', '_blank');
		form.append('</form>');
		$('body').append(form);
		$(form).submit();
		$("#targetUrlForm").remove();    	
    }
    
  	function formatIsInsideMenu(uiObject){
  		const isInsideMenu = uiObject.rowData.isInsideMenu;
  		if(isInsideMenu == 1){
  			return '<input type="checkbox" disabled tabindex="-1" checked>';
  		}
  		return '<input type="checkbox" disabled tabindex="-1">';
  	}
  	
  	function formatIsHomePage(uiObject){
  		const isHomePage = uiObject.rowData.isHomePage;
  		if(isHomePage == 1){
  			return '<input type="checkbox" disabled tabindex="-1" checked>';
  		}
  		return '<input type="checkbox" disabled tabindex="-1">';
  	}
  	
  	function submitForm(sourceElement) {
		let moduleId;
		if(sourceElement !== undefined){
			moduleId = sourceElement.id
		}
		$("#moduleId").val(moduleId);
		$("#formMuRedirect").submit();
	}
	
	function configHomePage() {
		$("#configHomePageListing").submit();
	}
</script>