<head>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/bootstrap/css/bootstrap.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.css"/>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.theme.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/css/starter.style.css" />
<script src="${(contextPath)!''}/webjars/jquery/3.5.1/jquery.min.js"></script>
<script src="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.js"></script>          
<script src="${(contextPath)!''}/webjars/1.0/gridutils/gridutils.js"></script> 
<script type="text/javascript" src="${contextPath!''}/webjars/1.0/JSCal2/js/jscal2.js"></script>
<script type="text/javascript" src="${contextPath!''}/webjars/1.0/JSCal2/js/lang/en.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/common/jQuiverCommon.js"></script>
</head>

<div class="container">
		<div class="topband">
		<h2 class="title-cls-name float-left">${messageSource.getMessage('jws.formBuilder')}</h2> 
		<div class="float-right">
            <div class="addonbtnblock">
            ${messageSource.getMessage('jws.show')}<select id="typeSelect" class="typeSelectDropDown spacingclss" onchange="changeType()" >   
                <option value="0">${messageSource.getMessage('jws.all')}</option>                   
                <option value="1" selected>${messageSource.getMessage('jws.custom')}</option>                   
                <option value="2">${messageSource.getMessage('jws.system')}</option>                 
            </select>
            
                        
                <span class="iconscover spacingclss">
                 <button type='button' onclick="location.href='${(contextPath)!''}/cf/ad'" class="addonicons addresourceicon" title="Additional Datasource">
                    </button>
                </span>
             
				
			<#if environment == "dev">

             <button  id="downloadForm" name="downloadForm"  type='button' onclick= "downloadForm();" class="spacingclss btn btn-secondary" title="${messageSource.getMessage('jws.downloadforms')}">${messageSource.getMessage('jws.downloadforms')}                  
                </button>

                 <button  id="uploadForm" name="uploadForm"  type='button' onclick= "uploadForm();" class="spacingclss btn btn-secondary" title="${messageSource.getMessage('jws.uploadforms')}">${messageSource.getMessage('jws.uploadforms')}                  
                </button> 
			</#if> 

              <button  name="addNewDynamicForm"  type='button'  onclick="submitForm(this)" class="spacingclss btn btn-primary " title="${messageSource.getMessage('jws.addform')}">${messageSource.getMessage('jws.addform')}               
                </button> 

                  <button type='button'onclick="backToHome();"  class="spacingclss btn btn-secondary" title="${messageSource.getMessage('jws.back')}">${messageSource.getMessage('jws.back')}                    
                </button>
 
            </div>
		</div>
		
		<div class="clearfix"></div>		
		</div>
		
		<div id="deleteHeader"></div>
		<div id="divDynamicFormMasterGrid" class="tablescrollcls"></div>

		<form action="${(contextPath)!''}/cf/aedf" method="POST" id="addEditDynamicForm">	
			<input type="hidden" id="formId" name="form-id">
            <input type="hidden" id="moduleName" name="moduleName">	
		</form>
		<form action="${(contextPath)!''}/cf/cmv" method="POST" id="revisionForm">
			<input type="hidden" id="cmvEntityName" name="cmvEntityName" value="jq_dynamic_form">
			<input type="hidden" id="entityId" name="entityId">
			<input type="hidden" id="moduleName" name="moduleName">
			<input type="hidden" id="moduleType" name="moduleType" value="dynamicForm">
			<input type="hidden" id="previousPageUrl" name="previousPageUrl" value="/cf/dfl">
		</form>
</div>

<script>
	document.title = "Form Builder Module List";
	contextPath = "${(contextPath)!''}";
	$(function () {
		$("#typeSelect").each(function () {
	        $(this).val($(this).find("option[selected]").val());
	    });
		let formElement = $("#addEditDynamicForm")[0].outerHTML;
		let formDataJson = JSON.stringify(formElement);
		sessionStorage.setItem("dynamic-form-manage-details", formDataJson);
		
			let colM = [
				{ title: "${messageSource.getMessage('jws.formname')}", width: 130, dataIndx: "formName" , align: "left", halign: "center",
					filter: { type: "textbox", condition: "contain",  listeners: ["change"] }},
				{ title: "${messageSource.getMessage('jws.formdescription')}", width: 130, dataIndx: "formDescription", align: "left", halign: "center",
					filter: { type: "textbox", condition: "contain",  listeners: ["change"] }},
				{ title: "${messageSource.getMessage('jws.createdBy')}", width: 100, dataIndx: "createdBy" ,hidden: true, align: "left", halign: "center",
					filter: { type: "textbox", condition: "contain",  listeners: ["change"] }},
				 { title: "${messageSource.getMessage('jws.updatedBy')}", width: 100, align: "center", hidden: false, sortable : true, dataIndx: "lastUpdatedBy", align: "left", halign: "center",
            	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },	
				{ title: "${messageSource.getMessage('jws.lastUpdatedDate')}", width: 100, dataIndx: "lastUpdatedTs", align: "left", halign: "center", render: formatLastUpdatedDate},
				{ title: "${messageSource.getMessage('jws.action')}", width: 100, maxWidth: 145, dataIndx: "action", align: "left", halign: "left", render: editDynamicFormFormatter, sortable: false}
			];
			let dataModel = {
        		url: contextPath+"/cf/pq-grid-data",
        		sortIndx: "lastUpdatedTs",
        		sortDir: "down", 
    		};
			let grid = $("#divDynamicFormMasterGrid").grid({
				gridId: "dynamicFormListingGrid",
				colModel: colM,
          		dataModel: dataModel,
                additionalParameters: {"cr_formTypeId":"str_1"}
			});
	});
	
	function changeType() {
        var type = $("#typeSelect").val();   
        let postData;
        if(type == 0) {
            postData = {gridId:"dynamicFormListingGrid"}
        } else {
            let typeCondition = "str_"+type;       
   
            postData = {gridId:"dynamicFormListingGrid"
                    ,"cr_formTypeId":typeCondition
                    }
        }
        
        let gridNew = $( "#divDynamicFormMasterGrid" ).pqGrid();
        gridNew.pqGrid( "option", "dataModel.postData", postData);
        gridNew.pqGrid( "refreshDataAndView" );  
    }
        
	function formType(uiObject){
		const formTypeId = uiObject.rowData.formTypeId;
		if(formTypeId === 1){
			return "Default";
		}else{
			return "System";
		}
	}
	
	function formatLastUpdatedDate(uiObject){
        let lastUpdatedTs = uiObject.rowData.lastUpdatedTs;
        if(lastUpdatedTs == null){
            lastUpdatedTs = uiObject.rowData.createdDate;
        }
        return formatDate(lastUpdatedTs);
    }
    
	function editDynamicFormFormatter(uiObject) {	
		let dynamicFormId = uiObject.rowData.formId;
		let dynamicFormName = uiObject.rowData.formName;
        const updatedDate = uiObject.rowData.lastUpdatedTs;
        const revisionCount = uiObject.rowData.revisionCount;
		let actionElement;
		<#if environment == "dev">
			actionElement = "<span id='"+dynamicFormId+"' class= 'grid_action_icons'><i class='fa fa-pencil'></i></span>";
      		actionElement = actionElement + "<span id='"+dynamicFormId+"' class= 'grid_action_icons' onclick='downloadFormById(this)'><i class='fa fa-download'></i></span>";
			actionElement = actionElement + "<span id='"+dynamicFormId+"_upload' name='"+dynamicFormName+"' class= 'grid_action_icons' onclick='uploadFormById(this)'><i class='fa fa-upload'></i></span>";
		<#else>
			actionElement = '<span id="'+dynamicFormId+'" onclick="submitForm(this)" class= "grid_action_icons"><i class="fa fa-pencil" title=""></i></span>';
			if(revisionCount > 1){
				actionElement = actionElement + '<span id="'+dynamicFormId+'_entity" name="'+dynamicFormName+'" onclick="submitRevisionForm(this)" class= "grid_action_icons"><i class="fa fa-history"></i></span>'.toString();
			}else{
				actionElement = actionElement + '<span class= "grid_action_icons disable_cls"><i class="fa fa-history"></i></span>'.toString();
			}
	
		</#if>	
            		if(uiObject.rowData.formTypeId == 1) { 
		        <#if loggedInUserRoleList?? && loggedInUserRoleList?size gt 0>
		        	<#list loggedInUserRoleList as loggedInUserRole>
		            	<#if (loggedInUserRole == "ADMIN")>   
		        			actionElement += '<span onclick=\'openDeletConfirmation("divDynamicFormMasterGrid","'+dynamicFormId+'","30a0ff61-0ecf-11eb-94b2-f48e38ab9348","'+dynamicFormName+'","'+updatedDate+'")\' class= "grid_action_icons" title="Delete"><i class="fa fa-trash "></i></span>'.toString();
		        			<#break>
		        		</#if>
		        	</#list>
		        </#if>
		        }
		return actionElement;
	}
		
	function submitForm(thisObj){	
		$("#formId").val(thisObj.id);	
		$("#addEditDynamicForm").submit();	
	}
  
	function submitRevisionForm(sourceElement) {
		let selectedId = sourceElement.id.split("_")[0];
		let moduleName = $("#"+sourceElement.id).attr("name")
		$("#entityId").val(selectedId);
		$("#moduleName").val(moduleName);
		$("#revisionForm").submit();
	}

  	function downloadFormById(thisObj){
	  	let formId = thisObj.id;
	  	$.ajax({
			url:contextPath+"/cf/ddfbi",
			type:"POST",
	        data:{
	        	formId : formId,
	        }, 
			success : function(data) {
			  showMessage("Dynamic Form downloaded successfully", "success");
			},
			error : function(xhr, error){
			  showMessage("Error occurred while downloading dynamic form", "error");
			}, 
	    });  
  	}
	
	function uploadFormById(thisObj){
	  	let formId = thisObj.id;
		let formName = $("#"+formId).attr("name");
	  	$.ajax({
			url:contextPath+"/cf/udfbn",
			type:"POST",
	        data:{
	        	formName : formName,
	        }, 
			success : function(data) {
			  showMessage("Dynamic Form uploaded successfully", "success");
			},
			error : function(xhr, error){
			  showMessage("Error occurred while uploading dynamic form", "error");
			}, 
	    });  
  	}
	
	function backToHome() {
		location.href = contextPath+"/cf/home";
	}
	<#if environment == "dev">
		function downloadForm(){
		     $.ajax({
		        url:contextPath+"/cf/ddf",
		        type:"POST",
				success : function(data) {
				  showMessage("Dynamic Forms downloaded successfully", "success");
				},
				error : function(xhr, error){
				  showMessage("Error occurred while downloading dynamic forms", "error");
				}, 
		        
		    });
		}
		function uploadForm(){
		     $.ajax({
		        url:contextPath+"/cf/udf",
		        type:"POST",
		        success : function(data) {
				  showMessage("Dynamic Forms uploaded successfully", "success");
				},
				error : function(xhr, error){
				  showMessage("Error occurred while uploading dynamic forms", "error");
				},
		        
		    });
		}
	</#if>
	
	
</script>