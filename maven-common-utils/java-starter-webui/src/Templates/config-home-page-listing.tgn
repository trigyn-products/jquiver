<head>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/bootstrap/css/bootstrap.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.css"/>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.theme.css" />
<script src="${(contextPath)!''}/webjars/jquery/3.5.1/jquery.min.js"></script>
<script src="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/gridutils/gridutils.js"></script>      
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/css/starter.style.css" />
<script src="${(contextPath)!''}/webjars/1.0/jquery-modal/jquery.modal.min.js"></script> 
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/jquery-modal/jquery.modal.min.css" />
<script src="${(contextPath)!''}/webjars/1.0/rich-autocomplete/jquery.richAutocomplete.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/typeahead/typeahead.js"></script>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/rich-autocomplete/richAutocomplete.min.css" />
    
</head>

<div class="container">
		<div class="topband">
		
		<h2 class="title-cls-name float-left">${messageSource.getMessage('jws.configHomePageListing')}</h2> 
		<div class="float-right">
		 <!-- <span>
  		    <input id="configHomePage" class="btn btn-primary" name="configHomePage" value="Add Default Page" type="button" onclick="editHomePage()">
		</span> -->


         <span onclick="backToModuleListingPage();">
          	<input id="backBtn" class="btn btn-secondary" name="backBtn" value="${messageSource.getMessage('jws.back')}" type="button">
         </span>	
		</div>
		
		<div class="clearfix"></div>		
		</div>
		
		<div id="divConfigHomeListing"></div>

		<form id="edit-home-page" class="modal addeditconfigmodal">
		    <div class="topband">
		        <h2 id="title" class="title-cls-name float-left">${messageSource.getMessage('jws.sethomepage')} </h2> 
		        <div class="clearfix"></div>        
		    </div>
		    <div class="row">
		       <div class="col-12">
			        <div class="col-inner-form full-form-fields">
			            <input type="hidden" id="roleId" name="roleId">
			            <input type="hidden" id="oldModuleId" name="old-module-id">
			            <input type="hidden" id="moduleId" name="module-id">
			            <input type="hidden" id="moduleName" name="module-name">
			            <label for="flammableState" style="white-space:nowrap">${messageSource.getMessage('jws.moduleName')}</label>
			            <div class="search-cover">
							<input class="form-control" id="slAutocomplete" type="text">
							<i class="fa fa-search" aria-hidden="true"></i>
			            </div>
			         </div>
			    </div>
		    </div>
		    
		    
		    <div class="row" style="margin-top: 20px;">
		        <div class="col-12">
		            <div class="float-right">
		                <input id="setDefaultBtn" class="btn btn-primary" name="setDefaultBtn" onclick="setToDefault()" value="Set To Default" type="button">
		                <input id="saveBtn" class="btn btn-primary" name="saveBtn" onclick="saveHomeModule()" value="Save" type="button">
		                <input id="backBtn" class="btn btn-secondary" name="backBtn" onclick="closeForm()" value="Cancel" type="button">
		            </div>
		        </div>
		    </div>
		</form>
</div>


<script>
	document.title = "Home Page Module List";
	contextPath = "${(contextPath)!''}";
	let slAutocomplete;
	
	function backToModuleListingPage() {
		location.href = contextPath+"/cf/mul";
	}
	$(function () {
		let colM = [
	        { title: "", width: 130, align: "center", dataIndx: "moduleId", align: "left", halign: "center", hidden : true },
	        { title: "", width: 130, align: "center", dataIndx: "roleId", align: "left", halign: "center", hidden : true },
	        { title: "${messageSource.getMessage('jws.role')}", width: 100, align: "center", dataIndx: "roleName", align: "left", halign: "center", render: formatroleName,
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.moduleName')}", width: 100, align: "center",  dataIndx: "moduleName", align: "left", halign: "center", render: formatmoduleName,
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.moduleUrl')}", width: 160, align: "center", dataIndx: "moduleURL", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.priority')}", width: 100, align: "center", dataIndx: "rolePriority", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
          	{ title: "${messageSource.getMessage('jws.action')}", width: 50, maxWidth: 145, dataIndx: "action", align: "center", halign: "center", render: formatActionCol, sortable: false}
		];
		let dataModel = {
        	url: contextPath+"/cf/pq-grid-data",
        	sortIndx: "rolePriority",
        	sortDir: "down",
    	};
		let grid = $("#divConfigHomeListing").grid({
	      gridId: "homePageListingGrid",
	      colModel: colM,
          dataModel: dataModel
	  });
	  
	  	slAutocomplete = $("#slAutocomplete").autocomplete({
	        autocompleteId: "site-layout-url-autocomplete",
	        prefetch : false,
	        enableClearText : true,
	        render: function(item) {
	            var renderStr ="";
                /**Written for preventing Cross Site Scripting*/
                var moduleName = item.text;
                var encodedName = $('<div />').text(moduleName).html();
                /**Ends Here*/
	            if(item.emptyMsg == undefined || item.emptyMsg === "")
	            {
	                renderStr = "<p>"+encodedName+"</p>";
	            }else
	            {
	                renderStr = item.emptyMsg;    
	            }                                
	            return renderStr;
	        },
	        additionalParamaters: {languageId: 1},
	        extractText: function(item) {
	            return item.text;
	        },
	        select: function(item) {
	        	$("#moduleId").val(item.moduleId);
	            $("#slAutocomplete").blur(); 
	        },
	        resetAutocomplete: function(autocompleObj){ 
	        	$("#moduleId").val("");
	        }     
		});
		
	});
   /*Written for preventing Cross Site Scripting*/
     function formatroleName(uiObject){   
        const roleName = uiObject.rowData.roleName;
        var encodedName = $('<div />').text(roleName).html();
        return encodedName;             
    }
    function formatmoduleName(uiObject){   
        const moduleName = uiObject.rowData.moduleName;
        var encodedName = $('<div />').text(moduleName).html();
        return encodedName;             
    }
    /**Ends Here*/
	
  	function formatActionCol(uiObject) {
		const roleId = uiObject.rowData.roleId;
		const moduleId = uiObject.rowData.moduleId;
		const moduleName = uiObject.rowData.moduleName;
        var modulename = $('<div />').text(moduleName).html();
		const roleName = uiObject.rowData.roleName;
        const moduleURL = uiObject.rowData.moduleURL;
		let actionElement = "";
		if(moduleId !== null){ 
			actionElement += '<span id="'+roleId+'" data-module-id="'+moduleId+'" data-module-name="'+modulename+'" data-role-name="'+roleName+'" onclick="editHomePage(this)" class= "grid_action_icons"><i class="fa fa-pencil" title="Edit module"></i></span>'.toString();
		} else {
			actionElement += '<span id="'+roleId+'" data-role-name="'+roleName+'" onclick="editHomePage(this)" class= "grid_action_icons"><i class="fa fa-pencil" title="Edit module"></i></span>'.toString();
		}
		if(moduleId == null){
            actionElement += '<span onclick="return false;" class= "grid_action_icons"><i class="fa fa-eye-slash" title="View module"></i></span>'.toString();
        }else {
        	actionElement += '<span onclick=\'openModuleListing("'+moduleURL+'")\' class= "grid_action_icons"><i class="fa fa-eye" title="View module"></i></span>'.toString();
        }
		
		return actionElement;
	}
  
    function openModuleListing(moduleURL) {
		window.open(contextPath+"/view/"+moduleURL);
    }
    
	function editHomePage(sourceElement) {
		let moduleId;
		let moduleName;
		let roleName;
		let roleId = sourceElement.id;
		let selectedModuleObj = new Object();
		
		moduleId = $("#"+roleId).data("module-id");
		moduleName = $("#"+roleId).data("module-name");
		roleName = $("#"+roleId).data("role-name");
		
		$("#moduleId").val("");
		$("#oldModuleId").val("");
		$("#moduleName").val("");
		if(moduleId !== undefined){ 
			$("#moduleId").val(moduleId);
			$("#oldModuleId").val(moduleId);
			$("#moduleName").val(moduleName);
		}
		$("#roleId").val(roleId);
		$("#roleName").val(roleName);
		$("#title").text("Set Home Page for " + roleName);
		$("#edit-home-page").modal();
		
		selectedModuleObj.moduleId = moduleId;
		selectedModuleObj.text = moduleName;
		slAutocomplete.setSelectedObject(selectedModuleObj);	
	}  	
  	
  	function closeForm() {
        $.modal.close();
    }
    
    function setToDefault(){ 
    	slAutocomplete.resetAutocomplete();
    }
    
    function saveHomeModule(){
    	let selectedModuleObj = slAutocomplete.getSelectedObject();
		let moduleId = $("#moduleId").val().trim();
		let roleId = $("#roleId").val();
		let oldModuleId = $("#oldModuleId").val().trim();
		
		if(moduleId !== "" || oldModuleId !== ""){
			$.ajax({
				type : "POST",
				url : contextPath+"/cf/schm",
				async: false,
				data : {
					oldModuleId: oldModuleId,
					moduleId : moduleId,
					roleId : roleId,
				},
				success : function(moduleId) {
					$("#moduleId").val(moduleId);
					$("#errorMessage").hide();
					showMessage("Information saved successfully", "success");
					closeForm();
					$("#divConfigHomeListing").pqGrid("refreshDataAndView");
				},
			        
			    error : function(xhr, error){
			    	showMessage("Error occurred while saving", "error");
			    },
			        	
			});
		}else{ 
			showMessage("Please select valid Module Name", "error");
		}
	}
	
	function validateModule(){ 
		let moduleId = $("#moduleId").val();
		let roleId = $("#roleId").val();
		$.ajax({
			type : "POST",
			url : contextPath+"/cf/vchm",
			async: false,
			data : {
				moduleId : moduleId,
				roleId : roleId,
			},
			success : function(moduleId) {
				showMessage("Information saved successfully", "success");
			},
		        
		    error : function(xhr, error){
		    	showMessage("Error occurred while saving", "error");
		    },
		        	
		});
	
	}
    
    
	

</script>