<#if selectedTab == "htmlContent">
```HTML
<!-- HTML Head -->
<head>
<script src="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.js"></script>          
<script src="${(contextPath)!''}/webjars/1.0/gridutils/gridutils.js"></script> 
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.css" />
</head>

<!-- HTML Body-->
<div class="container">
	<div class="topband">
		<h2 class="title-cls-name float-left">${messageSource.getMessage('jws.pagetitle')}</h2> 
		<div class="float-right">
			<button type="submit" class="btn btn-primary" onclick="upsert(null)"> Create New </button>


			<span onclick="backToWelcomePage();">
				<input id="backBtn" class="btn btn-secondary" name="backBtn" value="${messageSource.getMessage('jws.back')}" type="button">
			</span>	
		</div>
		
		<div class="clearfix"></div>		
	</div>
		
	<div id="yourGridId" class="tablescrollcls"></div>

</div>
```

<#elseif selectedTab == "jsContent">
```JavaScript
	contextPath = "${contextPath!''}";
	let primaryKeyDetails = {"key":""};
    let listingData  = [];
	$(function () {
	//Add all columns that needs to be displayed in the grid
		let colM = [
			{ title: "Column Name to be displayed", width: 130, dataIndx: "columnNameInQuery", align: "left", align: "left", halign: "center",
				filter: { type: "textbox", condition: "contain", listeners: ["change"]}  },
			{ title: "Action", width: 50, minWidth: 115, dataIndx: "action", align: "center", halign: "center", render: manageRecord, sortable: false}
		];
		let dataModel = {
        	sortIndx: "sort_column",
        	sortDir: "down",
    	};
	
	//System will fecth grid data based on gridId
		let grid = $("#yourGridId").grid({
	      gridId: "yourGridId",
	      colModel: colM,
          dataModel: dataModel
	  	});
	
	});
	
	//Customize grid action column. You can add buttons to perform various operations on records like add, edit, delete etc.
	function manageRecord(uiObject) {
		listingData  [uiObject.rowIndx] = uiObject.rowData;
        let rowIndx = uiObject.rowIndx;
	}
	
	//Add logic to navigate to create new record
    function upsert(a_rowID){
    	let redirectURL = contextPath+"/view/form-url-f";
        if(a_rowID != null && a_rowID != undefined && a_rowID >= 0){
    			redirectURL += '?key=' + listingData[a_rowID]["primary_key"];
    	}
    	location.href = redirectURL;
    }

	//Code go back to previous page
	function backToWelcomePage() {
		location.href = contextPath+"/cf/home";
	}
```
</#if>