<#assign optionalClass=" optional ">
<head>
<script type="text/javascript" src="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/dynamicform/addEditDynamicForm.js"></script>
<#if (columnDetails)??>
	<#list columnDetails as columnDetailsList>
        <#if columnDetailsList?api.get('columnType') == "date">
<link rel="stylesheet" type="text/css" href="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/JSCal2/css/jscal2.css" />
<link rel="stylesheet" type="text/css" href="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/JSCal2/css/border-radius.css" />
<link rel="stylesheet" type="text/css" href="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/JSCal2/css/steel/steel.css" />
<script type="text/javascript" src="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/JSCal2/js/jscal2.js"></script>
<script type="text/javascript" src="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/JSCal2/js/lang/en.js"></script>
        	<#break>
        </#if>
	</#list>
</#if>
<#if (toggleFileBin)?? && (toggleFileBin) == true>
<link rel="stylesheet" type="text/css" href="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/dropzone/dist/dropzone.css" />
<script type="text/javascript" src="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/dropzone/dist/dropzone.js"></script>
<script type="text/javascript" src="<#noparse>${(contextPath)!''}</#noparse>/webjars/1.0/fileupload/fileupload.js"></script>
</#if>
<style>
    .displayflex{
        display:flex;
        flex-direction: column;
    }

    .displayflex label{
		font-weight:bold;
    }

    .captchacenter{
	    display: flex;
	    align-items: center;
	    margin-top: 21px;
	}

	.captchafeildbx{
		font-weight:bold;
	}

	.captchacenter #imgCaptcha{
	    margin:0 0 0 15px !important;
	}

    </style>
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
</head>

<div class="container">
	<div class="topband">
		<h2 class="title-cls-name float-left pageHeader">${messageSource.getMessage('jws.adddetails')}</h2> 
		<div class="clearfix"></div>		
	</div>
  <form name="addEditForm" id="addEditForm" onsubmit="return false;" action="#">
    <div id="errorMessage" class="alert errorsms alert-danger alert-dismissable" style="display:none"></div>
    
    <#if (columnDetails)??>
    	<div class="row">
    	
    	<#list columnDetails as columnDetailsList>
         <#assign optionalClass=" optional ">

			<#if (columnDetailsList.columnType) != "hidden" && (columnDetailsList.autoIncrement) == false>
	    		<div class="col-lg-3 col-12">
					<div class="col-inner-form full-form-fields">
						<#if (columnDetailsList.i18NPresent)?? && (columnDetailsList.i18NPresent) == true>
							<#if (columnDetailsList.columnType) != "textarea" && (columnDetailsList.columnType) != "date" && (columnDetailsList.columnType) != "boolean">
                                    
						            <label for="${(columnDetailsList.columnName)}" style="white-space:nowrap">
						            <#if (columnDetailsList.isMandatory)>
						            <span class="asteriskmark">*</span>
						            <#assign optionalClass="">
						            </#if>
						              <#noparse><@resourceBundle</#noparse> "${(columnDetailsList.fieldName)!''}" <#noparse>/></#noparse>
						            </label>
								<input type="${(columnDetailsList.columnType)}" data-type="${(columnDetailsList.dataType)}" id="${(columnDetailsList.columnName)}" name="${(columnDetailsList.columnName)}"  value="<#noparse>${(resultSetObject.</#noparse>${(columnDetailsList.tableColumnName)}<#noparse>)!""}</#noparse>" maxlength="${(columnDetailsList.columnSize)!""}" placeholder=<#noparse>"<@resourceBundle</#noparse> '${(columnDetailsList.fieldName)!''}' <#noparse>/>"</#noparse> class="form-control  ${optionalClass!''}">
                                    
				            <#elseif (columnDetailsList.columnType) == "date">
				                   <#if (columnDetailsList.isMandatory)>
						            <span class="asteriskmark">*</span>
						            <#assign optionalClass="">
						            </#if>
				                    <label for="${(columnDetailsList.columnName)}"><#noparse><@resourceBundle</#noparse> "${(columnDetailsList.fieldName)!''}" <#noparse>/></#noparse></label>
				                    <span>
										<input id="${(columnDetailsList.columnName)}" readonly name="${(columnDetailsList.columnName)}" class="form-control" placeholder=<#noparse><@resourceBundle</#noparse> '${(columnDetailsList.fieldName)!''}' <#noparse>/></#noparse> />
				                        <button id="${(columnDetailsList.columnName)}-trigger" class="calender_icon"><i class="fa fa-calendar" aria-hidden="true"></i></button>
									</span>
							<#else>
								<#if (columnDetailsList.isMandatory)>
						            <span class="asteriskmark">*</span>
						            <#assign optionalClass="">
						            </#if>
								<label for="${(columnDetailsList.columnName)!""}"><#noparse><@resourceBundle</#noparse> "${(columnDetailsList.fieldName)!''}" <#noparse>/></#noparse></label>
								<textarea class="form-control ${optionalClass!''}" rows="4" cols="90" data-type="text" <#noparse></#noparse> id="${(columnDetailsList.columnName)!""}" placeholder=<#noparse>"<@resourceBundle</#noparse> '${(columnDetailsList.fieldName)!''}' <#noparse>/>"</#noparse> name="${(columnDetailsList.columnName)!""}" ><#noparse>${(resultSetObject.</#noparse>${(columnDetailsList.tableColumnName)}<#noparse>)!""}</#noparse></textarea>
							</#if>
							
						<#else>	
							<#if (columnDetailsList.columnType) != "textarea" && (columnDetailsList.columnType) != "date" && (columnDetailsList.columnType) != "boolean">
                             
						            <label for="${(columnDetailsList.columnName)}" style="white-space:nowrap">
									<#if (columnDetailsList.isMandatory)>
						            <span class="asteriskmark">*</span>
						            <#assign optionalClass="">
						            </#if>
						            	${columnDetailsList?api.get('fieldName')!''}
						            </label>
								<input type="${(columnDetailsList.columnType)}" data-type="${(columnDetailsList.dataType)}" id="${(columnDetailsList.columnName)}" name="${(columnDetailsList.columnName)}"  value="<#noparse>${(resultSetObject.</#noparse>${(columnDetailsList.tableColumnName)}<#noparse>)!""}</#noparse>" maxlength="${(columnDetailsList.columnSize)!""}" placeholder="${(columnDetailsList.fieldName)!''}" class="form-control ${optionalClass!''}">
                            <#elseif (columnDetailsList.columnType) == "boolean">
                                    <div class="displayflex">
										<label for="${(columnDetailsList.columnName)}">${(columnDetailsList.fieldName)!''}</label>
										<label class="newswitch">
											<input type="hidden"
											       id="toggleBoolean"
											       name="${(columnDetailsList.columnName)}"
											       value="0">
												<input type="checkbox"
												       name="toggleBooleanChkBox"
												       class="onoffswitch-checkbox"
												       id="toggleBooleanChkBox"
												       onchange="toggleBooleanVal()">
													<span class="slider round"/>
												</label>
									</div>                  
				            <#elseif (columnDetailsList.columnType) == "date">
				                    <#if (columnDetailsList.isMandatory)>
						            <span class="asteriskmark">*</span>
						            <#assign optionalClass="">
						            </#if>
				                    <label for="${(columnDetailsList.columnName)}">${(columnDetailsList.fieldName)!''}</label>
				                    <span>
										<input id="${(columnDetailsList.columnName)}" readonly name="${(columnDetailsList.columnName)}" class="form-control ${optionalClass!''}" placeholder="${(columnDetailsList.fieldName)!''}">
				                        <button id="${(columnDetailsList.columnName)}-trigger" class="calender_icon"><i class="fa fa-calendar" aria-hidden="true"></i></button>
									</span>
							<#else>
								<#if (columnDetailsList.isMandatory)>
						            <span class="asteriskmark">*</span>
						            <#assign optionalClass="">
						            </#if>
								<label for="${(columnDetailsList.columnName)}">${(columnDetailsList.fieldName)!''}</label>
								<textarea class="form-control ${optionalClass!''}" rows="4" cols="90" data-type="text" <#noparse></#noparse> id="${(columnDetailsList.columnName)}" placeholder="${(columnDetailsList.fieldName)!''}" name="${(columnDetailsList.columnName)}" ><#noparse>${(resultSetObject.</#noparse>${(columnDetailsList.tableColumnName)}<#noparse>)!""}</#noparse></textarea>
							</#if>
						</#if>
                        
					</div>
                       
				</div>
            <#elseif (columnDetailsList.autoIncrement) == true>
             <#if (columnDetailsList.columnType) != "hidden">
                <div class="col-lg-3 col-12" title="Auto Increment">
					<div class="col-inner-form full-form-fields">
                        <label for="${(columnDetailsList.columnName)}">${(columnDetailsList.fieldName)!''}</label>
						<input type="${(columnDetailsList.columnType)}" data-type="${(columnDetailsList.dataType)}" id="${(columnDetailsList.columnName)}" name="${(columnDetailsList.columnName)}"  value="<#noparse>${(resultSetObject.</#noparse>${(columnDetailsList.tableColumnName)}<#noparse>)!""}</#noparse>" readonly = "readonly" class="form-control  ${optionalClass!''}"placeholder="Auto Increment">
					</div>
				</div>
			  <#else>
                  <input type="${(columnDetailsList.columnType)}" data-type="${(columnDetailsList.dataType)}" id="${(columnDetailsList.columnName)}" name="${(columnDetailsList.columnName)}"  value="<#noparse>${(resultSetObject.</#noparse>${(columnDetailsList.tableColumnName)}<#noparse>)!""}</#noparse>" readonly = "readonly" class="form-control  ${optionalClass!''}"placeholder="Auto Increment">
              </#if>
            <#elseif (columnDetailsList.autoIncrement) == false>
				<input type="${(columnDetailsList.columnType)}" data-type="${(columnDetailsList.dataType)}" id="${(columnDetailsList.columnName)}" name="${(columnDetailsList.columnName)}"  value="<#noparse>${(resultSetObject.</#noparse>${(columnDetailsList.tableColumnName)}<#noparse>)!""}</#noparse>" > 
			</#if>
    	</#list>
    	</div>
    </#if>
    <#if (toggleCaptcha)?? && (toggleCaptcha) == true>
     <div class="row">
		<div class="col-lg-5 col-12" title="Reload Captcha">
			 <div class="col-inner-form full-form-fields">
                 <div class="captchacenter">
                 <div class="captchafeildbx">				 
					<label for="formCaptcha">Enter Captcha <span class="asteriskmark">*</span></label>
					<input type="text" id="formCaptcha" name="formCaptcha" class="form-control" placeholder="Type your captcha here"  >
                 </div>
                 <div clas="captachimblock">
                    <img id="imgCaptcha" name="imgCaptcha" src="${(contextPath)!''}/cf/captcha/<#noparse>${formId}</#noparse>_captcha">
					<i id="reloadCaptcha" class="fa fa-refresh" aria-hidden="true" ></i>
                    </div>
                    </div>
                    
        
                
			</div>
		 </div>
    </div>
     </#if>
     
     <#if (toggleFileBin)?? && (toggleFileBin) == true >     
        <#noparse> <#if (resultSetObject.</#noparse>${editCondition}<#noparse>)?? ></#noparse>
      <div class="row">
         <div class="col-6">
            <div id="fileUploadMaster" class="col-12 fileupload dropzone"></div>
         </div>
      </div>
      <#noparse> </#if>  </#noparse>
     </#if>
  </form>
   <#noparse>
	<div class="row">
		<div class="col-12">
			<div class="float-right">
				<div class="btn-group dropup custom-grp-btn">
                    <span id="savedAction">
                    <button type="button" id="saveAndReturn" class="btn btn-primary" onclick="onSaveButtonClick(SaveAction.Return, isEdit);">${messageSource.getMessage("jws.saveAndReturn")}</button>
                    </span>
                    <span id="actionDropdownBtn" type="button" class="caret-icon btn btn-primary dropdown-toggle panel-collapsed" onclick="actionOptions();"></span>
                    <div class="dropdown-menu action-cls"  id="actionDiv">
                    	<ul class="dropdownmenu">
                            <li id="saveAndCreateNew" onclick="onSaveButtonClick(SaveAction.CreateNew, isEdit);">${messageSource.getMessage("jws.saveAndCreateNew")}</li>
                            <li id="saveAndEdit" onclick="onSaveButtonClick(SaveAction.Edit, isEdit);">${messageSource.getMessage("jws.saveAndEdit")}</li>
                        </ul>
                    </div>  
                </div>
				<span onclick="backToPreviousPage();">
					<input id="backBtn" class="btn btn-secondary" name="backBtn" value="${messageSource.getMessage('jws.cancel')}" type="button">
				</span> 
			</div>
		</div>
	</div>
	</#noparse>
</div>
<script>
	document.title = "Manage ${(formName)!''}";
  <#noparse>
	contextPath = "${contextPath}";	 
    formId = "${formId}";
	 let isEdit = 0;
	</#noparse>

  function toggleBooleanVal() {
		let isChecked = $('#toggleBooleanChkBox').is(':checked')? 1 : 0;		
        $("#toggleBoolean").val(isChecked);  
    }  
  
  $("#reloadCaptcha").click(function(event){
    $("#imgCaptcha").attr("src", $("#imgCaptcha").attr("src")+"#");
    $("#formCaptcha").val("");
});
  $(function(){
    // setting value on edit.
    <#if (columnDetails)??>
        <#list columnDetails as columnDetailsList>
        <#if (columnDetailsList.columnType) == "date">
        Calendar.setup({
			trigger    : "${(columnDetailsList.columnName)!""}-trigger",
			inputField : "${(columnDetailsList.columnName)!""}",
			dateFormat : "%d-%B-%Y",
			weekNumbers: true,          
            showTime: 12,
			onSelect   : function() { 
				let selectedDate = this.selection.get();
				let date = Calendar.intToDate(selectedDate);
				date = Calendar.printDate(date, "%d-%B-%Y");
				$("#"+this.inputField.id).val(date);
				this.hide(); 
			}
		});
        </#if>
        </#list>
    </#if>
    <#noparse>
      <#if (resultSet)??>
      	<#list resultSet as resultSetList>
    </#noparse>  		
      		<#if (columnDetails)??>
    	        <#list columnDetails as columnDetailsList>
                    <#if (columnDetailsList.columnType) == "date">
                    try{
                       $("#"+"${(columnDetailsList.columnName)}") .val(Calendar.printDate(Calendar.parseDate('<#noparse>${(resultSetList</#noparse>.${(columnDetailsList.tableColumnName!'')}<#noparse>)}</#noparse>',false),"%d-%B-%Y"));
                    }catch(excp){}
                    </#if>
                </#list>    
            </#if>
    <#noparse>	
      	</#list>
      </#if>
    </#noparse>
    
     <#noparse>
      <#if (resultSet)?? && resultSet?has_content>
      	isEdit = 1;
	
	$(".pageHeader").html("Edit Details ${(formName)!''}");
      <#else>
	
      </#if>
    </#noparse>
    <#if (toggleFileBin)?? && (toggleFileBin) == true>
      ${(fileBinId)}dropZone.getSelectedFiles();
    </#if>
	changeDefaultAction()
	hideShowActionButtons();
  });
  
  /**
	* This method should return non null or defined object in order to 
 	* submit the form. return null or undefined in case your custom / additional 
	* validation fails. If you don't want to perform any validation then either
	* delete the method or return the same object.
	* 
	* If you want to change the name of the form, then implement below method and return 
	* the form name in String
	* 
	*      getFormName();
	* 
	* If you want to change the URL/router of the form, then implement below method and return 
	* the form url/router in String
	* 
	*      getformURL();
	*
	* you also want to call below lines to focus and highlight erroneous field
	*      $("#"+fieldName).focus();
	*      $("#"+fieldName).closest("div").parent().effect("highlight", {}, 3000);
	*      showMessage("Issue in input", "warn");
	* 
	* In case a processed value has to be passed to the server for saving/processing, then you can call
	* function pushToSerializedData.
	* The default parameters to be passed will be, 
	*		a_serializedFormData: This is the input for this method.
	* 		a_name				: This is the parameter name, which will be used to access the parameter at server side.
	*		a_value				: This will be String value, which will be saved at the used to save/update at server.
	*		a_valueType			: Data type of the parameter, which will be saved/updated to DB.
	*
	*/
	function onValidation(a_serializedFormData){
	    
	    return a_serializedFormData;
	}
	
  /**
	* this method is called when there is a successful response from server.
	* you can use this to take other actions in case you need to. Success 
	* message will be shown before calling this method. 
	* you can define getSuccessMessage() function and return string for custom success message
	*/
	function onSuccess(a_serverResponse){
	    
	}
	
  /**
	* this method is called when there is any error at server while executing server side 
	* code.
	* you can use this to take other actions in case you need to.
	* error message will be shown before calling this method. If you don't want the message to be 
	* shown, then define getErrorMessage() function and return null or undefined.
	*
	* you can define getErrorMessage() function and return string for custom error message
	*/
	function onError(jqXHR, exception){
	    showMessage(exception, "error");
	}

	//Code go back to previous page
	function backToPreviousPage() {
		<#if moduleURL?? && moduleURL?has_content>
			location.href = contextPath+"/view/${(moduleURL)!''}";
		<#else>
			location.href = contextPath+"/cf/home";
		</#if>
	}
	<#if (toggleFileBin)?? && (toggleFileBin) == true>
    let ${(fileBinId)}dropZone = $(".fileupload").fileUpload({
        fileBinId : "${(fileBinId)}",
        fileAssociationId: "${(fileAssociationId)}",
        createFileBin : true,
        renderer: fileConfigRenderer,
    });

   
     function fileConfigRenderer(fileObj) {
        let fileUploadId = fileObj["id"];
        let fileName = fileObj["name"];
        let btnTxt = resourceBundleData("jws.copyFilePath,jws.fileName");
        let actionElem = "<div class='fileicons'><span class='iconcovercls' title='"+btnTxt["jws.copyFilePath"]+"'><i class='fileupload-actions fa fa-copy float-right'  onclick=\"copyFilePath('"+fileUploadId+"')\"></i></span>" +
        "<div class='fileicons'><span class='iconcovercls' title='"+btnTxt["jws.fileName"]+"'><i class='fileupload-actions fa fa-info float-right' onclick=\"fileName('"+fileName+"')\"></i></span>"+ 
        "<div class='fileicons'><span class='iconcovercls' title='Delete'><i class='fileupload-actions fa fa-trash float-right' onclick=\"deleteFile('"+fileUploadId+"')\"></i></span></div>";        
        return actionElem;
  
	}
    
    function fileName(a_fileName){
        showMessage("File Name: " + a_fileName, "success");
    }

     function copyFilePath(a_fileUploadId){
        let input = $("<input>");
        $("body").append(input);
        input.val(window.location.origin + contextPath+"/cf/files/" + a_fileUploadId).select();
        document.execCommand("copy");
        input.remove();
        showMessage("File Path Copied Successfully", "success");
    }
    
      function deleteFile(fileUploadId){
        ${(fileBinId)}dropZone.deleteFileById(fileUploadId);
    }
	</#if>
</script>