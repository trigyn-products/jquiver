<head>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/bootstrap/css/bootstrap.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.css"/>
<link rel="stylesheet" href="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.theme.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.css" />
<link rel="stylesheet" href="${(contextPath)!''}/webjars/1.0/css/starter.style.css" />
<script src="${(contextPath)!''}/webjars/jquery/3.5.1/jquery.min.js"></script>
<script src="${(contextPath)!''}/webjars/jquery-ui/1.12.1/jquery-ui.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/pqGrid/pqgrid.min.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/gridutils/gridutils.js"></script>      
<script type="text/javascript" src="${contextPath!''}/webjars/1.0/JSCal2/js/jscal2.js"></script>
<script type="text/javascript" src="${contextPath!''}/webjars/1.0/JSCal2/js/lang/en.js"></script>
<script src="${(contextPath)!''}/webjars/1.0/common/jQuiverCommon.js"></script>

</head>

<div class="container">
		<div class="topband">
		
		<h2 class="title-cls-name float-left">${messageSource.getMessage('jws.gridUtils')}</h2> 
		<div class="float-right">
           
		<form id="addEditGridForm" action="${(contextPath)!''}/cf/df" method="post" class="margin-r-5 pull-left">
         <div class="addonbtnblock">
		${messageSource.getMessage('jws.show')}<select id="typeSelect" class="typeSelectDropDown spacingclss" onchange="changeType()">   
                <option value="0">${messageSource.getMessage('jws.all')}</option>                   
                <option value="1" selected>${messageSource.getMessage('jws.custom')}</option>                   
                <option value="2">${messageSource.getMessage('jws.system')}</option>                 
            </select>
	            <input type="hidden" name="formId" value="8a80cb8174bebc3c0174bec1892c0000"/>
	            <input type="hidden" name="primaryId" id="primaryId" value=""/>


	            <!-- <a href="${(contextPath)!''}/cf/ad"> 
					<input id="additionalDataSource" class="btn btn-primary" value="${messageSource.getMessage('jws.additionaldatasource')}" type="button">
				</a> -->
                
                <span class="iconscover spacingclss">
                 <button type='button' onclick="location.href='${(contextPath)!''}/cf/ad'" class="addonicons addresourceicon" title="Additional Datasource">
                    </button>
                </span>
               
                <button type="submit" class="spacingclss btn btn-primary ">${messageSource.getMessage('jws.addgrid')}</button>

                <button type='button' onclick="backToWelcomePage();" class="spacingclss btn btn-secondary" title="${messageSource.getMessage('jws.back')}">${messageSource.getMessage('jws.back')}                    
                </button>


        	</form>

         
		</div>	
		</div>
		
		<div class="clearfix"></div>		
		</div>
		
		<div id="deleteHeader"></div>
		 <div class="table_responsive">

             <div class="cursor show"></div>
		    <div id="divGridDetailsListing" class="tablescrollcls"></div>
        </div>

<form action="${(contextPath)!''}/cf/cmv" method="POST" id="revisionForm">
    <input type="hidden" id="cmvEntityName" name="cmvEntityName" value="jq_grid_details">
	<input type="hidden" id="entityId" name="entityId">
	<input type="hidden" id="moduleName" name="moduleName">
	<input type="hidden" id="moduleType" name="moduleType" value="grid">
	<input type="hidden" id="formId" name="formId" value="8a80cb8174bebc3c0174bec1892c0000">
	<input type="hidden" id="previousPageUrl" name="previousPageUrl" value="/cf/gd">
</form>

</div>


<script>
	document.title = "Grid Module List";
	contextPath = "${(contextPath)!''}";
	function backToWelcomePage() {
			location.href = contextPath+"/cf/home";
	}
	$(function () {
		$("#typeSelect").each(function () {
	        $(this).val($(this).find("option[selected]").val());
	    });
		let formElement = $("#addEditGridForm")[0].outerHTML;
		let formDataJson = JSON.stringify(formElement);
		sessionStorage.setItem("grid-details-form", formDataJson);
		
		let colM = [
	        { title: "${messageSource.getMessage('jws.gridid')}", width: 130, align: "center", dataIndx: "gridId", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.gridname')}", width: 100, align: "center",  dataIndx: "gridName", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.gridDescription')}", width: 160, align: "center",hidden: true, dataIndx: "gridDesc", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.gridtablename')}", width: 200, align: "center", dataIndx: "gridTableName", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	        { title: "${messageSource.getMessage('jws.gridcolnames')}", width: 100, align: "center", dataIndx: "gridColumnName", align: "left", halign: "center",
	        	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },
	       { title: "${messageSource.getMessage('jws.updatedBy')}", width: 100, align: "center", hidden: false, sortable : true, dataIndx: "lastUpdatedBy", align: "left", halign: "center",
            	filter: { type: "textbox", condition: "contain", listeners: ["change"]} },    
	        { title: "${messageSource.getMessage('jws.lastUpdatedDate')}", width: 100, align: "center", dataIndx: "lastUpdatedTs", align: "left", halign: "center", render: formatLastUpdatedDate},
	        { title: "${messageSource.getMessage('jws.action')}", width: 110, align: "left", render: editGridDetails, dataIndx: "action", sortable: false }
		];
		let dataModel = {
        	url: contextPath+"/cf/pq-grid-data",
        	sortIndx: "lastUpdatedTs",
        	sortDir: "down",
    	};
		let grid = $("#divGridDetailsListing").grid({
	      gridId: "gridDetailsListing",
	      colModel: colM,
          dataModel: dataModel,
          additionalParameters: {"cr_gridTypeId":"str_1"}
	  });
	  
	});
	
	function changeType() {
        var type = $("#typeSelect").val();   
        let postData;
        if(type == 0) {
            postData = {gridId:"gridDetailsListing"}
        } else {
            let typeCondition = "str_"+type;       
            postData = {
            	gridId:"gridDetailsListing" 
            	,"cr_gridTypeId":typeCondition
            }
        }
        
        let gridNew = $( "#divGridDetailsListing" ).pqGrid();
        gridNew.pqGrid( "option", "dataModel.postData", postData);
        gridNew.pqGrid( "refreshDataAndView" );  
    }
        
	function gridType(uiObject){
		const gridTypeId = uiObject.rowData.gridTypeId;
		if(gridTypeId === 1){
			return "Default";
		}else{
			return "System";
		}
	}
	
	function formatLastUpdatedDate(uiObject){
        const lastUpdatedTs = uiObject.rowData.lastUpdatedTs;
        return formatDate(lastUpdatedTs);
    }
	
	function editGridDetails(uiObject) {
		const gridId = uiObject.rowData.gridId;
		const gridName = uiObject.rowData.gridName;
        const updatedDate = uiObject.rowData.lastUpdatedTs;
       const revisionCount = uiObject.rowData.revisionCount;
		
		let actionElement;
		actionElement = '<span id="'+gridId+'" onclick="submitForm(this)" class= "grid_action_icons"><i class="fa fa-pencil" title=""></i></span>';
		if(revisionCount > 1){
			actionElement = actionElement + '<span id="'+gridId+'_entity" name="'+gridName+'" onclick="submitRevisionForm(this)" class= "grid_action_icons"><i class="fa fa-history"></i></span>'.toString();
		}else{
			actionElement = actionElement + '<span class= "grid_action_icons disable_cls"><i class="fa fa-history"></i></span>'.toString();
		}
            		if(uiObject.rowData.gridTypeId == 1) {
        <#if loggedInUserRoleList?? && loggedInUserRoleList?size gt 0>
        	<#list loggedInUserRoleList as loggedInUserRole>
            	<#if (loggedInUserRole == "ADMIN")>    
        			actionElement += '<span onclick=\'openDeletConfirmation("divGridDetailsListing","'+gridId+'","07067149-098d-11eb-9a16-f48e38ab9348","'+gridName+'","'+updatedDate+'")\' class= "grid_action_icons" title="Delete"><i class="fa fa-trash "></i></span>'.toString();
        			<#break>
        		</#if>
        	</#list>
        </#if>
        }
		return actionElement;
	}
	
	function submitForm(element) {
		$("#primaryId").val(element.id);
		$("#addEditGridForm").submit();
	}
	
	function submitRevisionForm(sourceElement) {
		let selectedId = sourceElement.id.split("_")[0];
		let moduleName = $("#"+sourceElement.id).attr("name")
      	$("#entityId").val(selectedId);
		$("#moduleName").val(moduleName);
      	$("#revisionForm").submit();
    }
</script>