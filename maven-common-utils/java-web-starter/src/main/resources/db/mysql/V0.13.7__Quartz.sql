
/*TABLE STRUCTURE FOR TABLE `QRTZ_BLOB_TRIGGERS` */

DROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;
CREATE TABLE `QRTZ_BLOB_TRIGGERS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(190) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(190) NOT NULL,
  `BLOB_DATA` BLOB DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `SCHED_NAME` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)  
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_BLOB_TRIGGERS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_CALENDARS` */
DROP TABLE IF EXISTS QRTZ_CALENDARS;
CREATE TABLE `QRTZ_CALENDARS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `CALENDAR_NAME` VARCHAR(190) NOT NULL,
  `CALENDAR` BLOB NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`CALENDAR_NAME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_CALENDARS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_CRON_TRIGGERS` */
DROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;
CREATE TABLE `QRTZ_CRON_TRIGGERS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(190) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(190) NOT NULL,
  `CRON_EXPRESSION` VARCHAR(120) NOT NULL,
  `TIME_ZONE_ID` VARCHAR(80) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) 
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_CRON_TRIGGERS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_FIRED_TRIGGERS` */
DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;
CREATE TABLE `QRTZ_FIRED_TRIGGERS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `ENTRY_ID` VARCHAR(95) NOT NULL,
  `TRIGGER_NAME` VARCHAR(190) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(190) NOT NULL,
  `INSTANCE_NAME` VARCHAR(190) NOT NULL,
  `FIRED_TIME` BIGINT(13) NOT NULL,
  `SCHED_TIME` BIGINT(13) NOT NULL,
  `PRIORITY` INT(11) NOT NULL,
  `STATE` VARCHAR(16) NOT NULL,
  `JOB_NAME` VARCHAR(190) DEFAULT NULL,
  `JOB_GROUP` VARCHAR(190) DEFAULT NULL,
  `IS_NONCONCURRENT` VARCHAR(1) DEFAULT NULL,
  `REQUESTS_RECOVERY` VARCHAR(1) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`ENTRY_ID`),
  KEY `IDX_QRTZ_FT_TRIG_INST_NAME` (`SCHED_NAME`,`INSTANCE_NAME`),
  KEY `IDX_QRTZ_FT_INST_JOB_REQ_RCVRY` (`SCHED_NAME`,`INSTANCE_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QRTZ_FT_J_G` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_FT_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_FT_T_G` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_FT_TG` (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_FIRED_TRIGGERS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_JOB_DETAILS` */
DROP TABLE IF EXISTS QRTZ_JOB_DETAILS;
CREATE TABLE `QRTZ_JOB_DETAILS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `JOB_NAME` VARCHAR(190) NOT NULL,
  `JOB_GROUP` VARCHAR(190) NOT NULL,
  `DESCRIPTION` VARCHAR(250) DEFAULT NULL,
  `JOB_CLASS_NAME` VARCHAR(250) NOT NULL,
  `IS_DURABLE` VARCHAR(1) NOT NULL,
  `IS_NONCONCURRENT` VARCHAR(1) NOT NULL,
  `IS_UPDATE_DATA` VARCHAR(1) NOT NULL,
  `REQUESTS_RECOVERY` VARCHAR(1) NOT NULL,
  `JOB_DATA` BLOB DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_J_REQ_RECOVERY` (`SCHED_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QRTZ_J_GRP` (`SCHED_NAME`,`JOB_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_JOB_DETAILS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_LOCKS` */
DROP TABLE IF EXISTS QRTZ_LOCKS;
CREATE TABLE `QRTZ_LOCKS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `LOCK_NAME` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`LOCK_NAME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_LOCKS` */

INSERT  INTO `QRTZ_LOCKS`(`SCHED_NAME`,`LOCK_NAME`) VALUES 
('SCHEDULERFACTORYBEAN','TRIGGER_ACCESS');

/*TABLE STRUCTURE FOR TABLE `QRTZ_PAUSED_TRIGGER_GRPS` */
DROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;
CREATE TABLE `QRTZ_PAUSED_TRIGGER_GRPS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(190) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_PAUSED_TRIGGER_GRPS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_SCHEDULER_STATE` */
DROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;
CREATE TABLE `QRTZ_SCHEDULER_STATE` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `INSTANCE_NAME` VARCHAR(190) NOT NULL,
  `LAST_CHECKIN_TIME` BIGINT(13) NOT NULL,
  `CHECKIN_INTERVAL` BIGINT(13) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`INSTANCE_NAME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_SCHEDULER_STATE` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_SIMPLE_TRIGGERS` */
DROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;
CREATE TABLE `QRTZ_SIMPLE_TRIGGERS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(190) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(190) NOT NULL,
  `REPEAT_COUNT` BIGINT(7) NOT NULL,
  `REPEAT_INTERVAL` BIGINT(12) NOT NULL,
  `TIMES_TRIGGERED` BIGINT(10) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) 
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_SIMPLE_TRIGGERS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_SIMPROP_TRIGGERS` */
DROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;
CREATE TABLE `QRTZ_SIMPROP_TRIGGERS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(190) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(190) NOT NULL,
  `STR_PROP_1` VARCHAR(512) DEFAULT NULL,
  `STR_PROP_2` VARCHAR(512) DEFAULT NULL,
  `STR_PROP_3` VARCHAR(512) DEFAULT NULL,
  `INT_PROP_1` INT(11) DEFAULT NULL,
  `INT_PROP_2` INT(11) DEFAULT NULL,
  `LONG_PROP_1` BIGINT(20) DEFAULT NULL,
  `LONG_PROP_2` BIGINT(20) DEFAULT NULL,
  `DEC_PROP_1` DECIMAL(13,4) DEFAULT NULL,
  `DEC_PROP_2` DECIMAL(13,4) DEFAULT NULL,
  `BOOL_PROP_1` VARCHAR(1) DEFAULT NULL,
  `BOOL_PROP_2` VARCHAR(1) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) 
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

/*DATA FOR THE TABLE `QRTZ_SIMPROP_TRIGGERS` */

/*TABLE STRUCTURE FOR TABLE `QRTZ_TRIGGERS` */
DROP TABLE IF EXISTS QRTZ_TRIGGERS;
CREATE TABLE `QRTZ_TRIGGERS` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(190) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(190) NOT NULL,
  `JOB_NAME` VARCHAR(190) NOT NULL,
  `JOB_GROUP` VARCHAR(190) NOT NULL,
  `DESCRIPTION` VARCHAR(250) DEFAULT NULL,
  `NEXT_FIRE_TIME` BIGINT(13) DEFAULT NULL,
  `PREV_FIRE_TIME` BIGINT(13) DEFAULT NULL,
  `PRIORITY` INT(11) DEFAULT NULL,
  `TRIGGER_STATE` VARCHAR(16) NOT NULL,
  `TRIGGER_TYPE` VARCHAR(8) NOT NULL,
  `START_TIME` BIGINT(13) NOT NULL,
  `END_TIME` BIGINT(13) DEFAULT NULL,
  `CALENDAR_NAME` VARCHAR(190) DEFAULT NULL,
  `MISFIRE_INSTR` SMALLINT(2) DEFAULT NULL,
  `JOB_DATA` BLOB DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_T_J` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_T_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_T_C` (`SCHED_NAME`,`CALENDAR_NAME`),
  KEY `IDX_QRTZ_T_G` (`SCHED_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_T_STATE` (`SCHED_NAME`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_N_STATE` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_N_G_STATE` (`SCHED_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_NEXT_FIRE_TIME` (`SCHED_NAME`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_ST` (`SCHED_NAME`,`TRIGGER_STATE`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_ST_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_NFT_ST_MISFIRE_GRP` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_GROUP`,`TRIGGER_STATE`)
 ) ENGINE=INNODB DEFAULT CHARSET=UTF8MB3;

ALTER TABLE `QRTZ_BLOB_TRIGGERS` ADD CONSTRAINT `QRTZ_BLOB_TRIGGERS_IBFK_2` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `QRTZ_TRIGGERS`(`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`);
ALTER TABLE `QRTZ_CRON_TRIGGERS` ADD CONSTRAINT `QRTZ_CRON_TRIGGERS_IBFK_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `QRTZ_TRIGGERS` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`);
ALTER TABLE `QRTZ_SIMPLE_TRIGGERS` ADD CONSTRAINT `QRTZ_SIMPLE_TRIGGERS_IBFK_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `QRTZ_TRIGGERS` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`);
ALTER TABLE `QRTZ_SIMPROP_TRIGGERS` ADD CONSTRAINT `QRTZ_SIMPROP_TRIGGERS_IBFK_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `QRTZ_TRIGGERS` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`);
ALTER TABLE `QRTZ_TRIGGERS` ADD CONSTRAINT `QRTZ_TRIGGERS_IBFK_1` FOREIGN KEY (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`) REFERENCES `QRTZ_JOB_DETAILS` (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`);
