REPLACE  INTO `jq_rest_mtd_signature`(`help_id`,`module_type`,`help`,`description`) values 
('1','REST_API','var System = Java.type(\"java.lang.System\");\r\nvar HashMap = Java.type(\"java.util.HashMap\");\r\n\r\nfunction log2Console(a_strMessage){\r\n    var isToPrint = true;\r\n    if(isToPrint == false){\r\n        return;\r\n    }\r\n    System.out.println(a_strMessage);\r\n}\r\n\r\nfunction doSomething(){\r\n    var returnObject = new HashMap();\r\n    returnObject.put(\"property_01\", \"property_01_value\");\r\n    returnObject.put(\"property_02\", \"property_02_value\");\r\n    returnObject.put(\"property_03\", \"property_03_value\");\r\n    return returnObject;\r\n}\r\ndoSomething();','Help is for Produce Type - application/json and Platform type - JavaScript'),
('10','REST_API','public T  (HttpServletRequest a_httpServletRequest, Map<String, FileInfo> files, Map<String, Object> daoResultSets, UserDetailsVO userDetails) {\r\n      return \"<b>Hello World<b>\";\r\n}','Help is for Produce Type - text/html and Platform type - Java'),
('11','REST_API','public T  (HttpServletRequest a_httpServletRequest, Map<String, FileInfo> files, Map<String, Object> daoResultSets, UserDetailsVO userDetails) {\r\n      return \"Hello World\";\r\n}','Help is for Produce Type - text/plain and Platform type - Java'),
('12','REST_API','public T  (HttpServletRequest a_httpServletRequest, Map<String, FileInfo> files, Map<String, Object> daoResultSets, UserDetailsVO userDetails) {\r\n    String xmlInString =\r\n        \"<emails>\" +\r\n          \"<email>\" +\r\n          \"<header>\" +\r\n          \"<property name=\"\">value here</property>\" +\r\n          \"<property name=\"\">value here</property>\" +\r\n          \"</header>\" +\r\n          \"<sender><!-- This is optional. Default mail configuration will be used, if not provided. -->\" +\r\n          \"<name ></name>\" +\r\n          \"<mailid ></mailid>\" +\r\n          \"<replyTo></replyTo><!-- this is optional -->\" +\r\n          \"</sender>\" +\r\n          \"<recepients separatemails=\"true|false\"><!-- separatemails is optional. If true, all recepients will receive\" +\r\n          \"<!-- 1=internal uploaded file;2=filesystem;3=uploaded file in this call -->\" +\r\n          \"<name ></name>\" +\r\n          \"<path></path>\" +\r\n          \"<!-- if type=1 then fileuploadid;else absolute file path,else the uploaded file -->\" +\r\n        \"</attachment>\" +\r\n        \"</attachments>\" +\r\n        \"</email>\" +\r\n        \"</emails>\";\r\n    return xmlInString;\r\n}','Help is for Produce Type - email/xml and Platform type - Java'),
('13','REST_API','{\r\n    \"property_01\": \"property_01_value\",\r\n    \"property_02\": \"property_02_value\",\r\n    \"property_03\": \"property_03_value\"\r\n}','Help is for Produce Type - application/json and Platform type - FTL'),
('14','REST_API','<#-- any valid XML structure -->\r\n<note>\r\n      <to>Tove</to>\r\n      <from>Jani</from>\r\n      <heading>Reminder</heading>\r\n      <body>Don\'t forget me this weekend!</body>\r\n</note>','Help is for Produce Type - application/xml and Platform type - FTL'),
('15','REST_API','<#assign helloWorld = \"Hello World\">\r\nvar text1 = \"\\\\\"Hello World\\\\\"\";\r\ndocument.getElementById(\"methodSignature\").textContent += text1;\r\n$(\"#methodSignature\").append(\"\\\\n\\\\t\\\\t&dollar;{helloWorld}\");\r\n\r\n','Help is for Produce Type - text/plain and Platform type - FTL'),
('16','REST_API','<#assign helloWorldinBold = \"<b>Hello World</b>\">\\\\n\r\nvar text1 = \"Hello World\";\\\\n\r\ndocument.getElementById(\"methodSignature\").textContent += text1;\\\\n\r\n$(\"#methodSignature\").append(\"Hello World\");','Help is for Produce Type - text/html and Platform type - FTL'),
('17','REST_API','<#-- Email XML structure given below -->','Help is for Produce Type - email/xml and Platform type - FTL'),
('18','REST_API','# Code for returning an object/number/value\r\n# Here the return object\'s value will be stored\r\n# in the result variable.\r\n# Make sure to follow the syntax\r\n\r\ndef my_function():\r\n    person = {\r\n        \"firstName\": \"John\",\r\n        \"lastName\": \"Doe\",\r\n        \"age\": 50,\r\n        \"eyeColor\": \"blue\"\r\n    }\r\n    return person\r\n\r\nresult = my_function()\r\n\r\n# Code for returning any number or value\r\n\r\ndef my_function():\r\n    return 1\r\n\r\nresult = my_function()','Help is for Produce Type - application/json and Platform type - Python'),
('19','REST_API','# Code for returning an object\r\n\r\n<?php\r\nfunction my_function() {\r\n    $person = [\r\n        \"firstName\" => \"John\",\r\n        \"lastName\" => \"Doe\",\r\n        \"age\" => 50,\r\n        \"eyeColor\" => \"blue\"\r\n    ];\r\n    return $person;\r\n}\r\n$result = my_function();\r\necho json_encode($result);\r\n?>\r\n\r\n# Code for returning any number or value\r\n<?php\r\nfunction my_function() {\r\n    return 1;\r\n}\r\necho my_function();\r\n?>','Help is for Produce Type - application/json and Platform type - PHP'),
('2','REST_API','var System = Java.type(\"java.lang.System\");\r\nfunction log2Console(a_strMessage){\r\n    var isToPrint = true;\r\n    if(isToPrint == false){\r\n        return;\r\n    }\r\n    System.out.println(a_strMessage);\r\n}\r\n\r\nfunction download(requestDetails) {\r\n    var FileInfo = Java.type(\"com.trigyn.jws.dbutils.vo.FileInfo\");\r\n    var FileType = Java.type(\"com.trigyn.jws.dbutils.vo.FileInfo.FileType\");\r\n    var fileInfo = new FileInfo();\r\n    fileInfo.setFileType(FileType.Physical); // FileType.FileBin to download from file bin\r\n    fileInfo.setAbsolutePath(absolute file path); // if FileType is Physical\r\n    fileInfo.setFileName(file name); // if FileType is Physical\r\n    fileInfo.setFileId(file upload id); // if FileType is FileBin\r\n    fileInfo.setReturnAction(\"1\");// 1 for download, 2 for view\r\n    fileInfo.setMimeType(download type); // optional\r\n    return fileInfo;\r\n}\r\n\r\nfunction doSomething(){\r\n    return download(requestDetails);\r\n}\r\ndoSomething();','Help is for Produce Type - application/octet-stream and Platform type - JavaScript'),
('20','REST_API','<?php\r\nfunction my_function() {\r\n	$xml = new SimpleXMLElement(\'<root></root>\');\r\n	$xml->addChild(\'element1\', \'value1\');\r\n	$xml->addChild(\'element2\', \'value2\');\r\n	echo $xml->asXML();\r\n}\r\necho my_function();\r\n?>','Help is for Produce Type - application/xml and Platform type - PHP'),
('21','REST_API','<?php\r\n\r\nfunction downloadFile($filePath, $fileName) {\r\n    // Ensure the file exists\r\n    if (file_exists($filePath)) {    \r\n        // Read the file and output it to the browser\r\n        readfile($filePath);\r\n        exit; // Terminate the script after file download\r\n    } else {\r\n        // File not found\r\n        echo \"File not found: $filePath\";\r\n    }\r\n}\r\n\r\n// Example usage\r\n$filePath = \'path/to/your/file.txt\';\r\n$fileName = \'downloaded_file.txt\';\r\n\r\necho downloadFile($filePath, $fileName);\r\n\r\n?>\r\n','Help is for Produce Type - application/octet-stream and Platform type - PHP'),
('22','REST_API','import mimetypes\r\n\r\ndef download_file(file_path):\r\n    try:\r\n        with open(file_path, \'rb\') as file:\r\n            content = file.read()\r\n            mime_type, _ = mimetypes.guess_type(file_path)\r\n            mime_type = mime_type if mime_type else \'application/octet-stream\'\r\n            return content, mime_type\r\n    except FileNotFoundError:\r\n        return None, None\r\n\r\n# Example usage\r\nfile_path = \'D:/others/addclick.txt\'\r\nresult = download_file(file_path)\r\n','Help is for Produce Type - application/octet-stream and Platform type - Python'),
('23','REST_API','def generate_xml_content():\r\n    # Create your XML content here\r\n    xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <root>\r\n        <element1>Value 1</element1>\r\n        <element2>Value 2</element2>\r\n    </root>\r\n    \"\"\"\r\n    return xml_content\r\n\r\nif __name__ == \'__main__\':\r\n    result = generate_xml_content()\r\n    print(result)\r\n','Help is for Produce Type - application/xml and Platform type - Python'),
('24','REST_API','<?php\r\nfunction my_function() {\r\n    // Retrieve the file path from the Java variable\r\n    $filePath = \'path\\\\to\\\\your\\\\file\';\r\n\r\n    // Check if the file path is not empty\r\n    if (!empty($filePath)) {\r\n        // Process the file as needed\r\n        $fileContent = file_get_contents($filePath);\r\n\r\n        // Output some response (you can modify this based on your requirements)\r\n        echo \"File uploaded successfully. File content: \" . $fileContent;\r\n    } else {\r\n        // Handle the case where the file path is empty\r\n        echo \"Error: File path is empty.\";\r\n    }\r\n}\r\necho my_function();\r\n?>','Help is for Produce Type - multipart/form-data and Platform type - PHP'),
('25','REST_API','import cgi\r\nimport os\r\n\r\ndef handle_multipart_form_data():\r\n    # Set the upload directory\r\n    upload_dir = \"yourUploadDir:/\"\r\n\r\n    # Make sure the upload directory exists\r\n    if not os.path.exists(upload_dir):\r\n        os.makedirs(upload_dir)\r\n\r\n    form = cgi.FieldStorage()\r\n\r\n    # Check if the \'file\' field is present in the form data\r\n    if \"file\" in form:\r\n        file_item = form[\"file\"]\r\n\r\n        # Check if the file was uploaded successfully\r\n        if file_item.file:\r\n            # Construct the file path in the upload directory\r\n            file_path = os.path.join(upload_dir, file_item.filename)\r\n\r\n            # Save the file\r\n            with open(file_path, \'wb\') as file:\r\n                file.write(file_item.file.read())\r\n\r\n        else:\r\n            print(\"File upload failed.\")\r\n    else:\r\n        print(\"No file uploaded.\")\r\n\r\nif __name__ == \"__main__\":\r\n   result = handle_multipart_form_data()','Help is for Produce Type - multipart/form-data and Platform type - python'),
('26','REST_API','<?php\r\n\r\nfunction generateHtmlContent() {\r\n    $htmlContent = \"\r\n        <html>\r\n            <head>\r\n                <title>PHP Script Output</title>\r\n            </head>\r\n            <body>\r\n                <h1>Hello from PHP!</h1>\r\n                <p>This is a sample HTML content generated by a PHP script.</p>\r\n            </body>\r\n        </html>\";\r\n\r\n    return $htmlContent;\r\n}\r\n\r\n// Call the function and echo the generated HTML content\r\necho generateHtmlContent();\r\n\r\n?>\r\n','Help is for Produce Type - text/html and Platform type - PHP'),
('27','REST_API','def generate_html_content():\r\n    html_content = \"\"\"\r\n        <html>\r\n            <head>\r\n                <title>Python Script Output</title>\r\n            </head>\r\n            <body>\r\n                <h1>Hello from Python!</h1>\r\n                <p>This is a sample HTML content generated by a Python script.</p>\r\n            </body>\r\n        </html>\r\n    \"\"\"\r\n    return html_content\r\n\r\n# Call the function and print the generated HTML content\r\nresult = generate_html_content()\r\n','Help is for Produce Type - text/html and Platform type - Python'),
('28','REST_API','<?php\r\n\r\nfunction generatePlainTextContent() {\r\n    $plainTextContent = \"Hello from PHP!\\\\n\";\r\n    $plainTextContent .= \"This is a sample plain text content generated by a PHP script.\";\r\n    \r\n    return $plainTextContent;\r\n}\r\n\r\n// Call the function and echo the generated plain text content\r\necho generatePlainTextContent();\r\n\r\n?>\r\n','Help is for Produce Type - text/plain and Platform type - PHP'),
('29','REST_API','def generate_plain_text_content():\r\n    plain_text_content = \"Hello from Python!\\\\n\"\r\n    plain_text_content += \"This is a sample plain text content generated by a Python script.\"\r\n    \r\n    return plain_text_content\r\n\r\n# Call the function and print the generated plain text content\r\nresult = generate_plain_text_content()\r\n','Help is for Produce Type - text/plain and Platform type - Python'),
('3','REST_API','var System = Java.type(\"java.lang.System\");\r\n\r\nfunction log2Console(a_strMessage) {\r\n    var isToPrint = true;\r\n    if (isToPrint == false) {\r\n        return;\r\n    }\r\n    System.out.println(a_strMessage);\r\n}\r\n\r\nfunction doSomething() {\r\n    String returnXML = \"<note>\" +\r\n          \"<to>Tove</to>\" +\r\n          \"<from>Jani</from>\" +\r\n          \"<heading>Reminder</heading>\" +\r\n          \"<body>Don\'t forget me this weekend!</body>\" +\r\n        \"</note>\";\r\n    return returnXML;\r\n}\r\n\r\ndoSomething();','Help is for Produce Type - application/xml and Platform type - JavaScript'),
('30','REST_API','<?php\r\n\r\nfunction generateXmlContent() {\r\n    echo \'\r\n<emails>\r\n    <email>\r\n        <sender>\r\n            <name>Sender_Name</name>\r\n            <mailid>php@example.com</mailid>\r\n        </sender>\r\n        <recepients separatemails=\"false\">\r\n            <recepient type=\"to\">\r\n                <name>Recepient_Name</name>\r\n                <mailid>recepient_name@xyz.com</mailid>\r\n            </recepient>\r\n        </recepients>\r\n        <subject>Hello from PHP!</subject>\r\n        <body contenttype=\"text/html\" content=\"1\">\r\n            <![CDATA[\r\n                    This is a sample XML content generated by a PHP script.\r\n            ]]>\r\n       </body> \r\n    </email>\r\n</emails>\';\r\n}\r\n\r\n// Call the function and echo the generated XML content\r\necho generateXmlContent();\r\n\r\n?>\r\n','Help is for Produce Type - email/xml and Platform type - PHP'),
('31','REST_API','def generate_xml_content():\r\n    return \'\'\'\r\n<emails>\r\n    <email>\r\n        <sender>\r\n            <name>User_Name</name>\r\n            <mailid>python@example.com</mailid>\r\n        </sender>\r\n        <recepients separatemails=\"false\">\r\n            <recepient type=\"to\">\r\n                <name>Recepient_Name</name>\r\n                <mailid>recepient_name@abc.com</mailid>\r\n            </recepient>\r\n        </recepients>\r\n        <subject>Hello from Python!</subject>\r\n        <body contenttype=\"text/html\" content=\"1\">\r\n            <![CDATA[\r\n                    This is a sample XML content generated by a Python script.\r\n            ]]>\r\n       </body> \r\n    </email>\r\n</emails>\r\n\'\'\'\r\n\r\n# Call the function and print the generated XML content\r\nresult = generate_xml_content()\r\n','Help is for Produce Type - email/xml and Platform type - Python'),
('4','REST_API','var System = Java.type(\"java.lang.System\");\r\n\r\nfunction log2Console(a_strMessage) {\r\n    var isToPrint = true;\r\n    if (isToPrint == false) {\r\n        return;\r\n    }\r\n    System.out.println(a_strMessage);\r\n}\r\n\r\nfunction doSomething() {\r\n    return \"<b>Hello World<b>\";\r\n}\r\n\r\ndoSomething();','Help is for Produce Type - text/html and Platform type - JavaScript'),
('5','REST_API','var System = Java.type(\"java.lang.System\");\r\n\r\nfunction log2Console(a_strMessage) {\r\n    var isToPrint = true;\r\n    if (isToPrint == false) {\r\n        return;\r\n    }\r\n    System.out.println(a_strMessage);\r\n}\r\n\r\nfunction doSomething() {\r\n    return \"Hello World\";\r\n}\r\n\r\ndoSomething();','Help is for Produce Type - text/plain and Platform type - JavaScript'),
('6','REST_API','var System = Java.type(\"java.lang.System\");\r\nvar HashMap = Java.type(\"java.util.HashMap\");\r\n\r\nfunction log2Console(a_strMessage) {\r\n    var isToPrint = true;\r\n    if (isToPrint == false) {\r\n        return;\r\n    }\r\n    System.out.println(a_strMessage);\r\n}\r\n\r\nfunction doSomething() {\r\n    // get the string of the Email XML structure given in below code snippet\r\n    // save the below XML structure in any template and read from there\r\n    var returnXML = jq_evalTemplateByName(\"yourtemplatename\", function() {\r\n        var params = new HashMap();\r\n        params.put(\"yourKey\", \"value\");\r\n        params.put(\"yourKey1\", \"value1\");\r\n        params.put(\"yourKey2\", \"value1\");\r\n        return params;\r\n    }());\r\n    log2Console(returnXML);\r\n    return returnXML;\r\n}\r\n\r\ndoSomething();','Help is for Produce Type - email/xml and Platform type - JavaScript'),
('7','REST_API','import com.google.gson.Gson;\r\nprivate Gson gson = new Gson();\r\npublic T  (HttpServletRequest a_httpServletRequest, Map&lt;String, FileInfo&gt; files, Map&lt;String, Object&gt; daoResultSets, UserDetailsVO userDetails) {\r\n    Object customObject = new Object();\r\n    return this.gson.toJson(customObject);\r\n}','Help is for Produce Type - application/json and Platform type - Java'),
('8','REST_API','import java.util.Map;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport com.trigyn.jws.dbutils.vo.FileInfo;\r\nimport com.trigyn.jws.dbutils.vo.FileInfo.FileType;\r\nimport com.trigyn.jws.dbutils.vo.UserDetailsVO;\r\n\r\npublic T  (HttpServletRequest a_httpServletRequest, Map&lt;String, FileInfo&gt; files, Map&lt;String, Object&gt; daoResultSets, UserDetailsVO userDetails) {\r\n\r\n    FileInfo fileInfo = new FileInfo();\r\n    fileInfo.setFileId(file upload id); //file physical id or file upload id\r\n    fileInfo.setFileName(file name); // if FileType is Physical\r\n    fileInfo.setFileType(FileType.Physical); // or FileType.FileBin to download from file bin\r\n    fileInfo.setAbsolutePath(absolute file path); // if FileType is Physical\r\n    fileInfo.setReturnAction(1); // 1 for download, 2 for view\r\n    return fileInfo;\r\n}','Help is for Produce Type - application/octet-stream and Platform type - Java'),
('9','REST_API','public T  (HttpServletRequest a_httpServletRequest, Map<String, FileInfo> files, Map<String, Object> daoResultSets, UserDetailsVO userDetails) {\r\n    String xmlInString = \"<note>\" +\r\n          \"<to>Tove</to>\" +\r\n          \"<from>Jani</from>\" +\r\n          \"<heading>Reminder</heading>\" +\r\n          \"<body>Don\'t forget me this weekend!</body>\" +\r\n        \"</note>\";\r\n    return xmlInString;\r\n}','Help is for Produce Type - application/xml and Platform type - Java');